{"ast":null,"code":"var _jsxFileName = \"/Users/carolinebromberg/Desktop/cozy-threads/frontend/src/Components/Checkout.js\",\n  _s = $RefreshSig$();\nimport { useCallback, useEffect, useState } from 'react';\nimport * as React from 'react';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { EmbeddedCheckoutProvider, EmbeddedCheckout } from '@stripe/react-stripe-js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst stripePromise = loadStripe('pk_live_51PhD3vRpA6VhXFHy5CdMHlEl7CtPIOHZ2Fu7dQunAd3K469wh3QlBpjBdN1q3EAom5VC66VTihMoO9dvEH1abBvk00hqBsWmcq');\nconst Checkout = ({\n  cart\n}) => {\n  _s();\n  const [clientSecret, setClientSecret] = useState('');\n  const fetchClientSecret = useCallback(async () => {\n    try {\n      const response = await fetch(\"http://localhost:4242/create-checkout-session\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          items: cart\n        })\n      });\n      if (!response.ok) {\n        throw new Error(`Server error: ${response.statusText}`);\n      }\n      const data = await response.json();\n      setClientSecret(data.clientSecret); // Set clientSecret state\n    } catch (error) {\n      console.error(\"Failed to fetch client secret:\", error);\n    }\n  }, [cart]);\n  useEffect(() => {\n    fetchClientSecret();\n  }, [cart, fetchClientSecret]);\n  const options = {\n    clientSecret\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"checkout\",\n    children: clientSecret && /*#__PURE__*/_jsxDEV(EmbeddedCheckoutProvider, {\n      stripe: stripePromise,\n      options: {\n        clientSecret\n      },\n      children: /*#__PURE__*/_jsxDEV(EmbeddedCheckout, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n_s(Checkout, \"xOROJhffl7qqp0jzoNYtcvugNBc=\");\n_c = Checkout;\nexport default Checkout;\nvar _c;\n$RefreshReg$(_c, \"Checkout\");","map":{"version":3,"names":["useCallback","useEffect","useState","React","loadStripe","EmbeddedCheckoutProvider","EmbeddedCheckout","jsxDEV","_jsxDEV","stripePromise","Checkout","cart","_s","clientSecret","setClientSecret","fetchClientSecret","response","fetch","method","headers","body","JSON","stringify","items","ok","Error","statusText","data","json","error","console","options","id","children","stripe","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/carolinebromberg/Desktop/cozy-threads/frontend/src/Components/Checkout.js"],"sourcesContent":["import { useCallback, useEffect, useState } from 'react';\nimport * as React from 'react';\nimport {loadStripe} from '@stripe/stripe-js';\nimport {\n  EmbeddedCheckoutProvider,\n  EmbeddedCheckout\n} from '@stripe/react-stripe-js';\nconst stripePromise = loadStripe('pk_live_51PhD3vRpA6VhXFHy5CdMHlEl7CtPIOHZ2Fu7dQunAd3K469wh3QlBpjBdN1q3EAom5VC66VTihMoO9dvEH1abBvk00hqBsWmcq');\n\nconst Checkout = ({cart}) => {\n    const [clientSecret, setClientSecret] = useState('');\n    const fetchClientSecret = useCallback(async () => {\n        try {\n            const response = await fetch(\"http://localhost:4242/create-checkout-session\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({ items: cart })\n            });\n\n            if (!response.ok) {\n                throw new Error(`Server error: ${response.statusText}`);\n            }\n\n            const data = await response.json();\n            setClientSecret(data.clientSecret); // Set clientSecret state\n        } catch (error) {\n            console.error(\"Failed to fetch client secret:\", error);\n        }\n    }, [cart]);\n\n    useEffect(() => {\n        fetchClientSecret();\n    }, [cart, fetchClientSecret]);\n    \n    const options = { clientSecret };\n\n    return (\n        <div id=\"checkout\">\n            {clientSecret && (\n                <EmbeddedCheckoutProvider\n                    stripe={stripePromise}\n                    options={{ clientSecret }}\n                >\n                    <EmbeddedCheckout/>\n                </EmbeddedCheckoutProvider>\n            )}\n        </div>\n    );\n}\n\nexport default Checkout;"],"mappings":";;AAAA,SAASA,WAAW,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AACxD,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,SAAQC,UAAU,QAAO,mBAAmB;AAC5C,SACEC,wBAAwB,EACxBC,gBAAgB,QACX,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACjC,MAAMC,aAAa,GAAGL,UAAU,CAAC,6GAA6G,CAAC;AAE/I,MAAMM,QAAQ,GAAGA,CAAC;EAACC;AAAI,CAAC,KAAK;EAAAC,EAAA;EACzB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAMa,iBAAiB,GAAGf,WAAW,CAAC,YAAY;IAC9C,IAAI;MACA,MAAMgB,QAAQ,GAAG,MAAMC,KAAK,CAAC,+CAA+C,EAAE;QAC1EC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACL,cAAc,EAAE;QACpB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEC,KAAK,EAAEZ;QAAK,CAAC;MACxC,CAAC,CAAC;MAEF,IAAI,CAACK,QAAQ,CAACQ,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAC,iBAAiBT,QAAQ,CAACU,UAAU,EAAE,CAAC;MAC3D;MAEA,MAAMC,IAAI,GAAG,MAAMX,QAAQ,CAACY,IAAI,CAAC,CAAC;MAClCd,eAAe,CAACa,IAAI,CAACd,YAAY,CAAC,CAAC,CAAC;IACxC,CAAC,CAAC,OAAOgB,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;IAC1D;EACJ,CAAC,EAAE,CAAClB,IAAI,CAAC,CAAC;EAEVV,SAAS,CAAC,MAAM;IACZc,iBAAiB,CAAC,CAAC;EACvB,CAAC,EAAE,CAACJ,IAAI,EAAEI,iBAAiB,CAAC,CAAC;EAE7B,MAAMgB,OAAO,GAAG;IAAElB;EAAa,CAAC;EAEhC,oBACIL,OAAA;IAAKwB,EAAE,EAAC,UAAU;IAAAC,QAAA,EACbpB,YAAY,iBACTL,OAAA,CAACH,wBAAwB;MACrB6B,MAAM,EAAEzB,aAAc;MACtBsB,OAAO,EAAE;QAAElB;MAAa,CAAE;MAAAoB,QAAA,eAE1BzB,OAAA,CAACF,gBAAgB;QAAA6B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG;EAC7B;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAAA1B,EAAA,CAzCKF,QAAQ;AAAA6B,EAAA,GAAR7B,QAAQ;AA2Cd,eAAeA,QAAQ;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}